spring:
  # 配置数据源
  datasource:
  freemarker:
    check-template-location: false
#    druid:
#      driver-class-name: com.mysql.cj.jdbc.Driver
#      url: jdbc:mysql://localhost:3306/test
#      username: root
#      password: 123456



# 设置日志级别，root表示根节点，即整体应用日志级别
logging:
  # 日志输出到文件的文件名
  file:
    name: server.log
  # 字符集
  charset:
    file: UTF-8
  # 分文件
  logback:
    rollingpolicy:
      #最大文件大小
      max-file-size: 160KB
      # 文件格式
      file-name-pattern: logs/server_log/%d{yyyy/MM月/dd日/}%i.log
  # 设置日志组
  group:
    # 自定义组名，设置当前组中所包含的包
    mao_pro: mao
  level:
    root: info
    # 为对应组设置日志级别
    mao_pro: debug
    # 日志输出格式
  # pattern:
  # console: "%d %clr(%p) --- [%16t] %clr(%-40.40c){cyan} : %m %n"



ets:
  inputPath: './in.xlsx'    # excel文件的路径
  outputPath: './out.sql'    # sql文件的输出路径
  appendTime: false          # 输出文件的文件名的后面是否追加时间信息
  appendTimeFormat: 'YYYYMMddHHmmss'   # 输出文件的文件名的后面追加时间信息的格式
  isWriteToMysql: false      # 是否直接执行输出的sql文件
  wrapNum: 1                 # sql文件两条sql之间换行的数量，也就是\n的个数
  apiKey: ''   # 百度地图ak，用于通过详细地址生成经纬度信息
  #distinct: ''               # 要去重的字段
  #orderBy: 'FPS,desc'        # 要排序的列，列为表头名称，升序为asc，降序为desc，按姓名降序：'姓名,desc'，按成绩升序：'成绩,asc'
  excel:
    sheetAt: 0               # 读取sheet的索引，从0开始，第一个sheet就是0，第二个sheet就是1
    startRow: 0              # 开始行，选择要从第几行开始读，从0开始，开始行必须为表头，从第4行开始就是3
    endRow: -1               # 结束行，值为-1默认读到最后一行
    startCell: 0             # 开始列，默认从第一列开始读
    endCell: -1              # 结束列，值为-1默认读到最后一列
  filter: # 过滤器，过滤掉满足以下条件的行，比如过滤掉‘所属班级’这一列中值为100001的行、过滤‘编码’字段值为‘Noinfo’、‘NotOnly’或者‘N000004-446-1151’的行
    "[编码]": [ 'Noinfo','NotOnly','N000004-446-1151' ]
    "[所属班级]": [ '100001' ]
    "[联系电话]": [ '' ]
  handler:                   # 处理器
    excelDataHandler:        # excel数据处理器
      ignoreRowExcelDataHandler:  # 忽略行excel数据处理器，filter为此处理器的配置项
        enable: true              # 是否启用此处理器
        order: 0                  # 执行的优先级，数字越低，优先级越高，越先执行
      distinctExcelDataHandler:   # 字段去重excel数据处理器，distinct为此处理器的配置项
        enable: true
        order: 1
      orderByExcelDataHandler:    # 字段排序excel数据处理器，orderBy为此处理器的配置项
        enable: true
        order: 2
      snowflakeIdExcelDataHandler: # 雪花算法ID生成excel数据处理器，filedName和machineCode为此处理器的配置项
        enable: true
        order: 8
        filedName: '_sid'       # 生成的雪花算法ID列的列名称，默认为_sid
        machineCode: 1          # 雪花算法的机器码，取值为0-31
      addressToGeoExcelDataHandler: # 详细地址转经纬度excel数据处理器，filedName为此处理器的配置项
        enable: false
        order: 20
        filedName: 'address'       # 详细地址字段名称
        concurrencyInterval: 350   # 并发的时间间隔，单位是毫秒，百度地图限制了并发，如果参数填200，就是每秒处理5个，填50是20个
        concurrencyRetryInterval: 3000  # 并发重试间隔，默认为3秒
        ifErrorAddTitle: true      # 如果发生错误，是否需要添加表头信息，当只运行了一部分后报错时，原来的一部分数据也会保存
        timeout: 60000             # 超时时间
        readTimeout: 30000         # 读取超时时间
      passwordEncoderExcelDataHandler: # 密码加密excel数据处理器
        enable: false
        order: 31
        filedName: 'password'       # 密码字段在表头里的名称，默认为password
        algorithm: 'BCrypt'         # 密码加密算法，默认为BCrypt，目前支持BCrypt、MD5、SHA1、SHA256算法，区分大小写
        isAllTypeEncoder: true   # 是否加密密码字段，如果为true，则生成所有加密算法的加密字符串，如果为false，则生成algorithm配置对应的加密字符串
      passwordVerificationExcelDataHandler: # 密码校验excel数据处理器
        enable: false
        order: 32
        passwordFiledName: 'password'       # 密码字段在表头里的名称，默认为password
        encoderPasswordFiledName: 'password_BCrypt'  # 加密后密码字段在表头里的名称，默认为password_BCrypt
        verificationResultFiledName: 'passwordVerificationResult'    # 校验输出结果的字段名称，默认为passwordVerificationResult
        algorithm: 'BCrypt'         # 密码加密算法，默认为BCrypt，目前支持BCrypt、MD5、SHA1、SHA256算法，区分大小写
      printExcelDataHandler:      # 数据打印excel数据处理器
        enable: true
        order: 9998
      saveExcelDataHandler:       # 保存excel数据处理器
        enable: true
        order: 9999
    sqlDataHandler:           # sql数据处理器
      transitionSqlDataHandler: # 事务sql数据处理器
        enable: true
        order: 10
      printSqlDataHandler:     # 数据打印sql数据处理器
        enable: true
        order: 9998


