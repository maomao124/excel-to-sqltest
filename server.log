2024-08-03 16:49:24.996 DEBUG 59744 --- [main] m.e.service.impl.ExcelServiceImpl        : 保存的文件位于：./out.xlsx
2024-08-03 16:49:24.997  INFO 59744 --- [main] m.e.service.impl.ExcelServiceImpl        : 退出"保存excel数据处理器"
2024-08-03 16:49:24.997  INFO 59744 --- [main] m.e.service.impl.RunServiceImpl          : 


本程序用于将Excel文件里的数据转换成sql脚本，并选择执行!
通过自定义模板来生成想要的sql语句
1. 模板使用freemacker模板引擎实现，变量使用'${表头列名称}'格式来替换
2. freemacker支持加减乘除运算、条件语句、类型转换等，使用方法自行百度
3. 如果表头包含空格，写法'${.vars['CPU Temp']'
4. 数值类型会有逗号，可以使用类型转换，示例：'${(_index?number*2+100000)?c}'
5. 程序包含内置参数'_index'，可以直接使用，从0开始
6. excel的日期类型统一转换成时间戳，想要格式化的时间，可以写成'${Time?number?number_to_datetime?string('yyyy-MM-dd HH:mm:ss')}'
7. 对于excel中性别字段为男或女，但是数据库为0或1的，可以使用if else解决，示例：'insert into student values(${年龄},<#if 性别=='男'>0</#if><#if 性别=='女'>1</#if>)'
8. 数据库配置位于 druid.properties 文件里
9. 如果直接想要使用默认的模板，可以直接按回车即可，使用默认模板时，excel里的表头列名称要满足数据库规范
10.程序通过配置属性类读取配置，配置文件示例如下，可以通过修改application.yml来修改配置，也可以通过参数传递来让配置临时生效
11.如果需要对数据进行加工处理，可以实现ExcelDataHandler或者SqlDataHandler接口来处理excel或者sql数据，可以参考AddressToGeoExcelDataHandler



ets:
  inputPath: './in.xlsx'    # excel文件的路径
  outputPath: './out.sql'    # sql文件的输出路径
  appendTime: false          # 输出文件的文件名的后面是否追加时间信息
  appendTimeFormat: 'YYYYMMddHHmmss'   # 输出文件的文件名的后面追加时间信息的格式
  isWriteToMysql: false      # 是否直接执行输出的sql文件
  wrapNum: 1                 # sql文件两条sql之间换行的数量，也就是\n的个数
  apiKey: ''   # 百度地图ak，用于通过详细地址生成经纬度信息
  #distinct: ''               # 要去重的字段
  #orderBy: 'FPS,desc'        # 要排序的列，列为表头名称，升序为asc，降序为desc，按姓名降序：'姓名,desc'，按成绩升序：'成绩,asc'
  excel:
    sheetAt: 0               # 读取sheet的索引，从0开始，第一个sheet就是0，第二个sheet就是1
    startRow: 0              # 开始行，选择要从第几行开始读，从0开始，开始行必须为表头，从第4行开始就是3
    endRow: -1               # 结束行，值为-1默认读到最后一行
    startCell: 0             # 开始列，默认从第一列开始读
    endCell: -1              # 结束列，值为-1默认读到最后一列
  filter: # 过滤器，过滤掉满足以下条件的行，比如过滤掉‘所属班级’这一列中值为100001的行、过滤‘编码’字段值为‘Noinfo’、‘NotOnly’或者‘N000004-446-1151’的行
    "[编码]": [ 'Noinfo','NotOnly','N000004-446-1151' ]
    "[所属班级]": [ '100001' ]
    "[联系电话]": [ '' ]
  handler:                   # 处理器
    excelDataHandler:        # excel数据处理器
      ignoreRowExcelDataHandler:  # 忽略行excel数据处理器，filter为此处理器的配置项
        enable: true              # 是否启用此处理器
        order: 0                  # 执行的优先级，数字越低，优先级越高，越先执行
      distinctExcelDataHandler:   # 字段去重excel数据处理器，distinct为此处理器的配置项
        enable: true
        order: 1
      orderByExcelDataHandler:    # 字段排序excel数据处理器，orderBy为此处理器的配置项
        enable: true
        order: 2
      snowflakeIdExcelDataHandler: # 雪花算法ID生成excel数据处理器，filedName和machineCode为此处理器的配置项
        enable: true
        order: 8
        filedName: '_sid'       # 生成的雪花算法ID列的列名称，默认为_sid
        machineCode: 1          # 雪花算法的机器码，取值为0-31
      addressToGeoExcelDataHandler: # 详细地址转经纬度excel数据处理器，filedName为此处理器的配置项
        enable: false
        order: 20
        filedName: 'address'       # 详细地址字段名称
        concurrencyInterval: 350   # 并发的时间间隔，单位是毫秒，百度地图限制了并发，如果参数填200，就是每秒处理5个，填50是20个
        concurrencyRetryInterval: 3000  # 并发重试间隔，默认为3秒
        ifErrorAddTitle: true      # 如果发生错误，是否需要添加表头信息，当只运行了一部分后报错时，原来的一部分数据也会保存
        timeout: 60000             # 超时时间
        readTimeout: 30000         # 读取超时时间
      devNumCreateExcelDataHandler: # 车牌号生成excel数据处理器，filedName为此处理器的配置项
        enable: true
        order: 60
        filedName: '车牌号'       # 车牌号字段名称
        prefix: '豫P'            # 车牌号前缀
      phoneCreateExcelDataHandler: # 手机号生成excel数据处理器，filedName为此处理器的配置项
        enable: true
        order: 70
        filedName: '手机号'       # 手机号字段名称
      passwordEncoderExcelDataHandler: # 密码加密excel数据处理器
        enable: false
        order: 31
        filedName: 'password'       # 密码字段在表头里的名称，默认为password
        algorithm: 'BCrypt'         # 密码加密算法，默认为BCrypt，目前支持BCrypt、MD5、SHA1、SHA256算法，区分大小写
        isAllTypeEncoder: true   # 是否加密密码字段，如果为true，则生成所有加密算法的加密字符串，如果为false，则生成algorithm配置对应的加密字符串
      passwordVerificationExcelDataHandler: # 密码校验excel数据处理器
        enable: false
        order: 32
        passwordFiledName: 'password'       # 密码字段在表头里的名称，默认为password
        encoderPasswordFiledName: 'password_BCrypt'  # 加密后密码字段在表头里的名称，默认为password_BCrypt
        verificationResultFiledName: 'passwordVerificationResult'    # 校验输出结果的字段名称，默认为passwordVerificationResult
        algorithm: 'BCrypt'         # 密码加密算法，默认为BCrypt，目前支持BCrypt、MD5、SHA1、SHA256算法，区分大小写
      printExcelDataHandler:      # 数据打印excel数据处理器
        enable: true
        order: 9998
      saveExcelDataHandler:       # 保存excel数据处理器
        enable: true
        order: 9999
    sqlDataHandler:           # sql数据处理器
      transitionSqlDataHandler: # 事务sql数据处理器
        enable: true
        order: 10
      printSqlDataHandler:     # 数据打印sql数据处理器
        enable: true
        order: 9998



2024-08-03 16:49:24.998 DEBUG 59744 --- [main] m.e.service.impl.TemplateServiceImpl     : 生成的默认模板：insert into 表名 (_sid,详细链接地址,图片地址,名称,链接地址2,参数6_文本,参数7_文本,参数8_文本,参数9_文本,参数10_文本,参数11_文本,参数12_文本,参数13_文本,参数14_文本,参数15_文本,参数16_文本,参数17_文本,参数18_文本,参数19_文本,价格,价格单位,参数22_链接文本,参数23_链接地址,参数24_链接文本,参数25_链接地址,参数27_链接文本,参数28_链接地址,参数30_链接文本,参数31_链接地址,参数34_链接地址,参数38_文本,车牌号,手机号) values(${_sid},${详细链接地址},${图片地址},${名称},${链接地址2},${参数6_文本},${参数7_文本},${参数8_文本},${参数9_文本},${参数10_文本},${参数11_文本},${参数12_文本},${参数13_文本},${参数14_文本},${参数15_文本},${参数16_文本},${参数17_文本},${参数18_文本},${参数19_文本},${价格},${价格单位},${参数22_链接文本},${参数23_链接地址},${参数24_链接文本},${参数25_链接地址},${参数27_链接文本},${参数28_链接地址},${参数30_链接文本},${参数31_链接地址},${参数34_链接地址},${参数38_文本},${车牌号},${手机号});
2024-08-03 16:49:24.998  INFO 59744 --- [main] m.e.service.impl.RunServiceImpl          : 默认模板示例：insert into 表名 (_sid,详细链接地址,图片地址,名称,链接地址2,参数6_文本,参数7_文本,参数8_文本,参数9_文本,参数10_文本,参数11_文本,参数12_文本,参数13_文本,参数14_文本,参数15_文本,参数16_文本,参数17_文本,参数18_文本,参数19_文本,价格,价格单位,参数22_链接文本,参数23_链接地址,参数24_链接文本,参数25_链接地址,参数27_链接文本,参数28_链接地址,参数30_链接文本,参数31_链接地址,参数34_链接地址,参数38_文本,车牌号,手机号) values(${_sid},${详细链接地址},${图片地址},${名称},${链接地址2},${参数6_文本},${参数7_文本},${参数8_文本},${参数9_文本},${参数10_文本},${参数11_文本},${参数12_文本},${参数13_文本},${参数14_文本},${参数15_文本},${参数16_文本},${参数17_文本},${参数18_文本},${参数19_文本},${价格},${价格单位},${参数22_链接文本},${参数23_链接地址},${参数24_链接文本},${参数25_链接地址},${参数27_链接文本},${参数28_链接地址},${参数30_链接文本},${参数31_链接地址},${参数34_链接地址},${参数38_文本},${车牌号},${手机号});
